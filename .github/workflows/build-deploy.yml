# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches:
      - '*'
      - '!service*'
      - '!main'
  pull_request:
    branches:
      - '*'
      - '!service*'
      - '!main'
      
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}

    - name: Set up JDK 19
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'temurin'
        cache: 'maven'

    - name: maven-settings-xml-action
      uses: whelk-io/maven-settings-xml-action@v20
      with:
        repositories: '[{ "id": "${{ secrets.MAVEN_REPO_ID }}", "url": "${{ secrets.MAVEN_REPO_URL }}" }]'
        servers: '[{ "id": "${{ secrets.MAVEN_REPO_ID }}", "username": "${{ secrets.MAVEN_REPO_NAME }}", "password": "${{ secrets.MAVEN_REPO_TOKEN }}" }]'

    - name: Extract Maven coordinates
      id: extract-maven-coordinates
      run: |
        cd $(find . -name "pom.xml" -type f | sed 's|/[^/]*$||')
        export GROUP_ID=$(mvn -q org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.groupId -DforceStdout)
        export ARTIFACT_ID=$(mvn -q org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.artifactId -DforceStdout)
        COORDINATES="$GROUP_ID.$ARTIFACT_ID"
        echo $COORDINATES
        echo "::set-output name=coordinates::$COORDINATES"

    - name: Delete package versions
      uses: actions/delete-package-versions@v2
      with:
        token: ${{ secrets.MAVEN_REPO_TOKEN }}
        package-name: ${{ steps.extract-maven-coordinates.outputs.coordinates }}
        package-type: 'maven'

    - name: Publish to GitHub Packages Apache Maven
      run: |
        cd $(find . -name "pom.xml" -type f | sed 's|/[^/]*$||')
        mvn -B -U deploy
